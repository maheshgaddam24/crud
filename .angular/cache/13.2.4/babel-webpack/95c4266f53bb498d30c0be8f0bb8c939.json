{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let RestApiService = /*#__PURE__*/(() => {\n  class RestApiService {\n    constructor(http) {\n      this.http = http; // Define API\n\n      this.apiURL = 'https://crudcrud.com/api/85edc4747a66497f94a92a5a25ff01fa/employees';\n      /*========================================\r\n        CRUD Methods for consuming RESTful API\r\n      =========================================*/\n      // Http Options\n\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    } // HttpClient API get() method => Fetch employees list\n\n\n    getEmployees() {\n      return this.http.get(this.apiURL).pipe(retry(1), catchError(this.handleError));\n    } // HttpClient API get() method => Fetch employee\n\n\n    getEmployee(_id) {\n      return this.http.get(this.apiURL + '/' + _id).pipe(retry(1), catchError(this.handleError));\n    } // HttpClient API post() method => Create employee\n\n\n    createEmployee(employee) {\n      return this.http.post(this.apiURL, JSON.stringify(employee), this.httpOptions).pipe(retry(1), catchError(this.handleError));\n    } // HttpClient API put() method => Update employee\n\n\n    updateEmployee(_id, employee) {\n      return this.http.put(this.apiURL + '/' + _id, JSON.stringify(employee), this.httpOptions).pipe(retry(1), catchError(this.handleError));\n    } // HttpClient API delete() method => Delete employee\n\n\n    deleteEmployee(_id) {\n      return this.http.delete(this.apiURL + '/' + _id, this.httpOptions).pipe(retry(1), catchError(this.handleError));\n    } // Error handling\n\n\n    handleError(error) {\n      let errorMessage = '';\n\n      if (error.error instanceof ErrorEvent) {\n        // Get client-side error\n        errorMessage = error.error.message;\n      } else {\n        // Get server-side error\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n      }\n\n      window.alert(errorMessage);\n      return throwError(() => {\n        return errorMessage;\n      });\n    }\n\n  }\n\n  RestApiService.ɵfac = function RestApiService_Factory(t) {\n    return new (t || RestApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  RestApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RestApiService,\n    factory: RestApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return RestApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}